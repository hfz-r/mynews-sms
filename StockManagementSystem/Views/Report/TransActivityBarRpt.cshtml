@{
    var prefix = ViewData["prefix"];
    var hidePanelAttributeName = ViewData["hidePanelAttributeName"];
    var hidePanel = (bool)ViewData["hidePanel"];
}

<div id="@(prefix)-box">
    <div class="chart">
        <canvas id="@(prefix)-chart" height="350"></canvas>
    </div>
</div>

<script>
    $(document).ready(function () {
        var currentPeriod;

        $('#@(prefix)-box').on('click', 'button[data-widget="collapse"]',
            function() {
                var collapsed = !$('#@(prefix)-box').hasClass('collapsed-box');
                saveUserPreferences('@(Url.Action("SavePreference", "Preferences"))', '@hidePanelAttributeName',  collapsed);

                if (!collapsed) {
                    $('#@(prefix)-box button[data-chart-role="toggle-chart"]').removeAttr('disabled');
                    if (!currentPeriod) {
                        $('#@(prefix)-box button[data-chart-role="toggle-chart"][data-chart-period="week"]')
                            .trigger('click');
                    }
                } else {
                    $('#@(prefix)-box button[data-chart-role="toggle-chart"]').attr('disabled', 'disabled');
                }
            });

        var chartData = {
            labels: [],
            datasets: []
        }
        var config = {
            type: 'bar',
            data: chartData,
            options: {
                responsive: true,
                legend: {
                    position: 'bottom'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false
                },
                scales: {
                    xAxes: [
                        {
                            stacked: true,
                            display: true,
                            ticks: {
                                userCallback: function (dataLabel, index) {
                                    if (window.myBar && window.myBar.config.data.labels.length > 12) {
                                        return index % 5 === 0 ? dataLabel : '';
                                    }
                                    return dataLabel;
                                }
                            }
                        }
                    ],
                    yAxes: [
                        {
                            stacked: true,
                            display: true,
                            ticks: {
                                userCallback: function (dataLabel, index) {
                                    return (dataLabel ^ 0) === dataLabel ? dataLabel : '';
                                },
                                min: 0
                            }
                        }
                    ]
                }
            }
        }

        function changePeriod(period) {
            var labels = [];
            var datasets = [];

            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetTransActivityStackedBarData", "Report")',
                data: {
                    period: period
                },
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var dsdata = [];
                        data[i].datasets.forEach(function (ds) {
                            if (i === 0)
                                labels.push(ds.label);

                            dsdata.push(ds.data);
                        });

                        datasets.push({
                            label: data[i].stacked,
                            data: dsdata,
                            backgroundColor: random_rgba()
                        });
                    }

                    if (!window.myBar) {
                        chartData.labels = labels;
                        chartData.datasets = datasets;
                        window.myBar = new Chart(document.getElementById("@prefix-chart").getContext("2d"), config);
                    } else {
                        window.myBar.config.data.labels = labels;
                        window.myBar.config.data.datasets = datasets;
                        window.myBar.update();
                    }
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    $("#loadTABarRptAlert").click();
                }
            });
        }

        $('#@(prefix)-box button[data-chart-role="toggle-chart"]').on('click', function ()
        {
            var period = $(this).attr('data-chart-period');
            currentPeriod = period;
            changePeriod(period);
            $('#@(prefix)-box button[data-chart-role="toggle-chart"]').removeClass('bg-yellow-gradient');
            $(this).addClass('bg-yellow-gradient');
        });

        @if (!hidePanel)
        {
            <text>
                $('#@(prefix)-box button[data-chart-role="toggle-chart"][data-chart-period="week"]').trigger('click');
            </text>
        }
    });
</script>