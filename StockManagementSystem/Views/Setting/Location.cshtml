@model LocationSearchModel

@{
    //page title
    ViewBag.Title = "Location";
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("setting.location");
}
@*<form asp-controller="Setting" asp-action="Location" method="post">*@
<section class="content-header clearfix">
    <h1 class="pull-left">@ViewBag.Title</h1>
    <ol class="breadcrumb pull-right">
        <li class="#">
            <a href="@Url.Action("Index", "Home")">
                <i class="glyphicon glyphicon-home"></i>
            </a>
        </li>
        <li class="#">
            <a href="#">
                <i class="fa fa-wrench"></i>
            </a>
        </li>
        <li class="breadcrumb-item active">
            <a href="@Url.Action("Location", "Setting")">@ViewBag.Title</a>
        </li>
    </ol>
</section>

<section class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="grid">
                    </div>
                    <style>
                        .hidden {
                            display: none;
                        }

                        .custom-button {
                            color: #444444;
                            padding-right: 10px;
                            font-size: 1.5em;
                        }
                    </style>
                    <script src="~/lib/kendo/2014.1.318/jszip.min.js"></script>
                    <script>
                        $(document).ready(function() {
                            var grid = $("#grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("ListLocation", "Setting"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        create: {
                                            url: "@Html.Raw(Url.Action("AddLocation", "Setting"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        update: {
                                            url: "@Html.Raw(Url.Action("UpdateLocation", "Setting"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("DeleteLocation", "Setting"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                Id: { editable: false, type: "number" },
                                                Prefix: { editable: true, type: "string", validation: { required: true } },
                                                Name: { editable: true, type: "string" }
                                            }
                                        }
                                    },
                                    requestEnd: function(e) {
                                        if (e.type == "create" || e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(Model.PageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true,
                                    sort: { field: "Id", dir: "asc" }
                                },
                                sortable: {
                                    mode: "single",
                                    allowUnsort: false
                                },
                                filterable: true,
                                columnMenu: { columns: false },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(Model.AvailablePageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                },
                                toolbar: [
                                    {
                                        name: "create",
                                        text: "Add",
                                        iconClass: "glyphicon btn-glyphicon glyphicon-plus img-circle text-danger"
                                    },
                                    {
                                        name: "excel",
                                        text: "Export Template",
                                        iconClass: "glyphicon btn-glyphicon glyphicon-export img-circle text-warning",
                                    }
                                ],
                                excel: {
                                    allPages: true
                                },
                                scrollable: false,
                                columns: [
                                    {
                                        field: "Prefix",
                                        title: "Prefix",
                                        placeholder: "Prefix",
                                        width: 200
                                    },
                                    {
                                        field: "Name",
                                        title: "Name",
                                        placeholder: "Name",
                                        width: 300
                                    },
                                    {
                                        template:
                                            "<a href='\\#' title='Edit' class='custom-button edit-button'><i class='glyphicon glyphicon-pencil'></i></a>" +
                                            "<a href='\\#' title='Update' class='custom-button update-button hidden'><i class='glyphicon glyphicon-ok-circle'></i></a>" +
                                            "<a href='\\#' title='Cancel' class='custom-button cancel-button hidden'><i class='glyphicon glyphicon-remove-circle'></i></a>" +
                                            "<a href='\\#' title='Destroy' class='custom-button destroy-button'><i class='glyphicon glyphicon-trash'></i></a>",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        width: 10
                                    }
                                ],
                                editable: "inline",
                                edit: function(e) {
                                    // Change buttons visibility when the Grid enters edit mode.
                                    var editRow = e.container;
                                    editRow.find(".custom-button").toggleClass("hidden");
                                }
                            }).data("kendoGrid");

                            $("#grid").on("click", ".custom-button", function (e) {
                                var btn = $(this);

                                if (btn.hasClass("edit-button")) {
                                    var row = btn.closest("tr");
                                    grid.editRow(row);
                                } else if (btn.hasClass("cancel-button")) {
                                    grid.cancelRow();
                                } else if (btn.hasClass("update-button")) {
                                    grid.saveChanges();
                                } else if (btn.hasClass("destroy-button")) {
                                    var row = btn.closest("tr");
                                    grid.removeRow(row);
                                }
                            });
                        });

                    </script>
                </div>
            </div>
        </div>
    </div>
</section>