@model OrderLimitSearchModel

@{
    //page title
    ViewBag.Title = "Stock Order Limit";
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("setting.order");
}
<form asp-controller="Setting" asp-action="Order" method="post">
    <section class="content-header clearfix">
        <h1 class="pull-left">@ViewBag.Title</h1>
        <ol class="breadcrumb pull-right">
            <li class="#">
                <a href="@Url.Action("Index", "Home")">
                    <i class="glyphicon glyphicon-home"></i>
                </a>
            </li>
            <li class="#">
                <a href="#">
                    <i class="glyphicon glyphicon-phone"></i>
                </a>
            </li>
            <li class="breadcrumb-item active">
                <a href="@Url.Action("Order", "Setting")">@ViewBag.Title</a>
            </li>
        </ol>
    </section>

    <section class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            @*Remove Percentage criteria; Not required - 05032019*@
                            @*<div class="col-xs-5">
                                <div class="form-group">
                                    <div class="col-xs-5">
                                        <label asp-for="SearchPercentage" class="control-label pull-right"></label>
                                    </div>
                                    <div class="col-xs-6">
                                        <input asp-for="SearchPercentage" type="text" class="form-control" min="0" max="100" onkeypress='return validateQty(event);'/>
                                    </div>
                                    <script>
                                        function validateQty(event) {
                                            var key = window.event ? event.keyCode : event.which;
                                            if (event.keyCode == 8 || event.keyCode == 46 || event.keyCode == 116
                                                || event.keyCode == 37 || event.keyCode == 39) {
                                                return true;
                                            }
                                            else if (key < 48 || key > 57) {
                                                return false;
                                            }
                                            else return true;
                                        };
                                    </script>
                                </div>
                            </div>*@
                            <div class="col-xs-6">
                                <div class="form-group">
                                    <div class="col-xs-5">
                                        <label asp-for="SelectedStoreIds" class="control-label pull-right"></label>
                                    </div>
                                    <div class="col-xs-7">
                                        <select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true"></select>
                                        <script>
                                        $(document).ready(function() {
                                            var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)')
                                                .kendoMultiSelect({
                                                    autoClose: false,
                                                    filter: "contains"
                                                }).data("kendoMultiSelect");

                                            @if (Model.AvailableStores.Count == 0)
                                            {
                                                <text>
                                                storesIdsInput.placeholder = "No stores available";
                                                storesIdsInput.enable = false;
                                                </text>
                                            }
                                        });
                                        </script>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-2 col-xs-offset-5">
                                <button type="button" id="search-orderLimit" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="grid"></div>
                        <style>
                            .custom-button {
                                color: #444444;
                                padding-right: 10px;
                                font-size: 1.5em;
                            }
                        </style>
                        <script>
                            var datasource = @Html.Raw(Json.Serialize(Model.AvailableStores));

                            $(document).ready(function () {
                                var grid = $("#grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("OrderLimitList", "Setting"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: function () {
                                                    var data = {
                                                        SelectedStoreIds: $('#@Html.IdFor(model => model.SelectedStoreIds)').val(),
                                                    @*SearchPercentage: $('#@Html.IdFor(model => model.SearchPercentage)').val() //Remove Percentage criteria; Not required - 05032019*@
                                                    };
                                                    addAntiForgeryToken(data);
                                                    return data;
                                                }
                                            },
                                            create: {
                                                url: "@Html.Raw(Url.Action("EditOrderLimit", "Setting"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        parameterMap: function (options, operation) {
                                            if (operation !== "read" && options.models) {
                                                return { models: kendo.stringify(options.models) };
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    Id: { editable: false, type: "number" },
                                                    //Percentage: { type: "string", validation: { required: true, min: 1 } }, //Remove Percentage criteria; Not required - 05032019
                                                    //DaysofStock: { type: "string", validation: { required: true } }, //Remove criteria; Not required - 19042019
                                                    //DaysofSales: {
                                                    //    type: "string", validation: {
                                                    //        required: true,
                                                    //        daysOfSalesValidation: function (input) {
                                                    //            if (input.is("[name='DaysofSales']") && input.val() < 14) {
                                                    //                input.attr("data-daysOfSalesValidation-msg", "Minimum to 14 days!");
                                                    //                return /[0-13]/.test(input.val());
                                                    //            }
                                                    //            return true;
                                                    //        }
                                                    //    }
                                                    //},
                                                    DeliveryPerWeek: { type: "string", validation: { required: true } },
                                                    Safety: { type: "string", validation: { required: true } },
                                                    InventoryLevel: { type: "string", validation: { required: true } },
                                                    OrderRatio: { type: "string", validation: { required: true } },
                                                    StoreName: { type: "string" },
                                                    SelectedStoreIds: { editable: true, validation: { required: true } }
                                                }
                                            }
                                        },
                                        requestEnd: function (e) {
                                            if (e.type == "create") {
                                                this.read();
                                            }
                                        },
                                        error: function (e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(Model.PageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    sortable: {
                                        mode: "single",
                                        allowUnsort: false
                                    },
                                    filterable: true,
                                    resizable: true,
                                    columnMenu: { columns: false },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(Model.AvailablePageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    toolbar: [
                                        {
                                            name: "create",
                                            template:
                                                "<a href='AddOrderLimit' class='k-button k-button-icontext k-grid-add'><span class='glyphicon btn-glyphicon glyphicon-plus img-circle text-danger k-add'></span>Add</a>",
                                            text: "Add",
                                            iconClass: "glyphicon btn-glyphicon glyphicon-plus img-circle text-danger"
                                        }
                                    ],
                                    scrollable: false,
                                    columns: [
                                        //Remove Percentage criteria; Not required - 05032019
                                        //{
                                        //    field: "Percentage",
                                        //    title: "Percentage",
                                        //    width: 230,
                                        //    editor: customEditor 
                                        //},
                                        //Remove criteria; Not required - 19042019
                                        //{
                                        //    field: "DaysofStock",
                                        //    title: "Buffer Days",
                                        //    width: 230,
                                        //    editor: customEditor 
                                        //},
                                        //{
                                        //    field: "DaysofSales",
                                        //    title: "Days of Sales",
                                        //    width: 230,
                                        //    editor: customEditorSales 
                                        //},
                                        {
                                            field: "DeliveryPerWeek",
                                            title: "Delivery Per Week",
                                            width: 230,
                                            editor: customEditor
                                        },
                                        {
                                            field: "Safety",
                                            title: "Safety",
                                            width: 230,
                                            editor: customEditor
                                        },
                                        {
                                            field: "InventoryCycle",
                                            title: "Inventory Cycle",
                                            width: 230,
                                            editor: customEditor
                                        },
                                        {
                                            field: "OrderRatio",
                                            title: "Order Ratio",
                                            width: 230,
                                            editor: customEditor
                                        },
                                        {
                                            field: "SelectedStoreIds",
                                            title: "Store",
                                            template: "#=StoreName#",
                                            type: "string",
                                            width: 300,
                                            editor: function (container, option) { // use a dropdownlist as an editor
                                                // create an input element with id and name set as the bound field (brandId)
                                                var input = $('<input data-text-field="Text" multiple="multiple" data-value-field="Value" data-bind="value:' + option.field + '">')
                                                // append to the editor container
                                                input.appendTo(container);

                                                // initialize a dropdownlist
                                                input.kendoMultiSelect({
                                                    dataTextField: "Text",
                                                    dataValueField: "Value",
                                                    dataSource: datasource,
                                                    optionLabel: " ",
                                                    autoBind: "true",
                                                    valuePrimitive: "true"
                                                }).appendTo(container)
                                            }
                                        }, {
                                            template:
                                                "<a href='EditOrder/#=Id#' title='Edit' class='custom-button edit-button'><i class='glyphicon glyphicon-pencil'></i></a>" +
                                                "<a href='DeleteOrderLimit/#=Id#' action='DeleteOrderLimit' title='Delete' class='custom-button destroy-button'><i class='glyphicon glyphicon-trash'></i></a>",
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            width: 111
                                        }
                                    ],
                                    //editable: {
                                    //    mode: "popup",
                                    //    window: {
                                    //        title: "Add" ,
                                    //        animation: false,
                                    //    }
                                    //},
                                    edit: function (e) {
                                        // Change buttons visibility when the Grid enters edit mode.
                                        var editRow = e.container;
                                        editRow.find(".custom-button").toggleClass("hidden");
                                    }
                                }).data("kendoGrid");

                                $("#grid").on("click", ".custom-button", function (e) {
                                    var btn = $(this);
                                    if (btn.hasClass("cancel-button")) {
                                        grid.cancelRow();
                                    } else if (btn.hasClass("update-button")) {
                                        grid.saveChanges();
                                    }
                                });
                            });

                            function customEditor(container, options) {
                                var stockInput =$('<input required name="' + options.field + '" onkeypress="return isValidChar(event)"/>')
                                    .appendTo(container);

                                stockInput.kendoNumericTextBox({
                                    min: 1,
                                    step: 1,
                                    format: "#",
                                    decimals: 0
                                });
                            }

                            //function customEditorSales(container, options) {
                            //    var salesInput = $('<input required name="' + options.field + '" onkeypress="return isValidChar(event)"/>')
                            //        .appendTo(container);

                            //    salesInput.kendoNumericTextBox({
                            //        min: 14,
                            //        step: 1,
                            //        format: "#",
                            //        decimals: 0
                            //    });
                            //}

                            function isValidChar(e) {
                                var match = e.key.match(/[0-9]/);
                                return match ? true : false;
                            }

                            function minimumVal(e) {
                                var min = e.key.min(/[14]/);
                                return min;
                            }

                        </script>
                        <script>
                            $(document).ready(function () {
                                //search button
                                $('#search-orderLimit').click(function () {
                                    var grid = $('#grid').data('kendoGrid');
                                    grid.dataSource.page(1);
                                    return false;
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
     </section>
</form>