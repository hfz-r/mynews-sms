@inject StockManagementSystem.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext
@{
    await Html.AppendScriptParts("~/lib/chartjs/Chart.min.js");

    const string prefix = "transaction-activity-pie";
    const string hidePanelAttributeName = "HideTransActivityPanel";
    var hidePanel = await genericAttributeService.GetAttributeAsync<bool>(workContext.CurrentUser, hidePanelAttributeName);
}

<div class="box box-default @if (hidePanel) { <text>collapsed-box</text> }" id="@(prefix)-box">
    <div class="box-header with-border">
        <h3 class="box-title">
            <i class="glyphicon glyphicon-console"></i> Transaction Activity
        </h3>
        <div class="box-tools pull-right">
            <button class="btn btn-xs btn-info btn-flat margin-r-5" @if (hidePanel) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="year">Year</button>
            <button class="btn btn-xs btn-info btn-flat margin-r-5" @if (hidePanel) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="month">Month</button>
            <button class="btn btn-xs btn-info btn-flat" @if (hidePanel) { <text> disabled="disabled" </text> } data-chart-role="toggle-chart" data-chart-period="week">Week</button>
            <button class="btn btn-box-tool margin-l-10" data-widget="collapse">
                @if (hidePanel)
                {
                    <text><i class="fa fa-plus"></i></text>
                }
                else
                {
                    <text><i class="fa fa-minus"></i></text>
                }
            </button>
        </div>
    </div>
    <div class="box-body">
        <div class="chart" style="height: 300px;">
            <canvas id="@(prefix)-chart" height="300"></canvas>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        var currentPeriod;

        $('#@(prefix)-box').on('click', 'button[data-widget="collapse"]',
            function() {
                var collapsed = !$('#@(prefix)-box').hasClass('collapsed-box');
                saveUserPreferences('@(Url.Action("SavePreference", "Preferences"))',
                    '@hidePanelAttributeName',
                    collapsed);

                if (!collapsed) {
                    $('#@(prefix)-box button[data-chart-role="toggle-chart"]').removeAttr('disabled');
                    if (!currentPeriod) {
                        $('#@(prefix)-box button[data-chart-role="toggle-chart"][data-chart-period="week"]')
                            .trigger('click');
                    }
                } else {
                    $('#@(prefix)-box button[data-chart-role="toggle-chart"]').attr('disabled', 'disabled');
                }
            });

        var config = {
            type: 'doughnut',
            data: {
                datasets: [
                    {
                        data: [],
                        backgroundColor: [],
                        label: []
                    }
                ],
                labels: []
            },
            options: {
                responsive: true,
                legend: {
                    position: 'top'
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        };

        var dynamicColors = function( i, total) {
            var r = 100+i* 155/total;
            var g = i* 255/total;
            var b = i* 255/total;
            return "rgb(" + r + "," + g + "," + b + ")";
        };

        function changePeriod(period) {
            var labels = [];
            var datas = [];
            var colors = [];

            $.ajax({
                cache: false,
                type: "GET",
                url: '@Url.Action("GetTransActivityDataPieChart", "User")',
                data: {
                    period: period
                },
                success: function(data) {
                    for (var i = 0; i < data.length; i++) {
                        labels.push(data[i].label);
                        datas.push(data[i].value);
                        colors.push(dynamicColors(i, data.length));
                    }

                    if (!window.TransActivityPie) {
                        config.data.labels = labels;
                        config.data.datasets[0].data = datas;
                        config.data.datasets[0].backgroundColor = colors;
                        config.data.scales = window.TransActivityPie =
                            new Chart(document.getElementById("@prefix-chart").getContext("2d"), config);
                    } else {
                        window.TransActivityPie.config.data.labels = labels;
                        window.TransActivityPie.config.data.datasets[0].data = datas;
                        window.TransActivityPie.config.data.datasets[0].backgroundColor = colors;
                        window.TransActivityPie.update();
                    }
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    $("#loadCustomerStatisticsAlert").click();
                }
            });
        }

        $('#@(prefix)-box button[data-chart-role="toggle-chart"]').on('click',
            function() {
                var period = $(this).attr('data-chart-period');
                currentPeriod = period;
                changePeriod(period);
                $('#@(prefix)-box button[data-chart-role="toggle-chart"]').removeClass('bg-maroon-gradient');
                $(this).addClass('bg-maroon-gradient');
            });

        @if (!hidePanel)
        {
            <text>
                $('#@(prefix)-box button[data-chart-role="toggle-chart"][data-chart-period="week"]').trigger('click');
            </text>
        }
    });
</script>