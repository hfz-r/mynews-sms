@model DeviceSearchModel

@{
    //page title
    ViewBag.Title = "Device Management";
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("device.manage");
}
<form asp-controller="Device" asp-action="Index" method="post">
<section class="content-header clearfix">
    <h1 class="pull-left">@ViewBag.Title</h1>
    <ol class="breadcrumb pull-right">
        <li class="#">
            <a href="@Url.Action("Index", "Home")">
                <i class="glyphicon glyphicon-home"></i>
            </a>
        </li>
        <li class="#">
            <a href="#">
                <i class="glyphicon glyphicon-phone"></i>
            </a>
        </li>
        <li class="breadcrumb-item active">
            <a href="@Url.Action("Index", "Device")">@ViewBag.Title</a>
        </li>
    </ol>
</section>

<section class="content">
<div class="form-horizontal">
<div class="panel-group">
<div class="panel panel-default panel-search">
    <div class="panel-body">
        <div class="row">
            <div class="col-xs-5">
                <div class="form-group">
                    <div class="col-xs-4">
                        <label asp-for="SearchSerialNo" class="control-label pull-right"></label>
                    </div>
                    <div class="col-xs-8">
                        <input asp-for="SearchSerialNo" class="form-control"/>
                    </div>
                </div>
            </div>
            <div class="col-xs-6">
                <div class="form-group">
                    <div class="col-xs-4">
                        <label asp-for="SelectedStoreIds" class="control-label pull-right"></label>
                    </div>
                    <div class="col-xs-8">
                        <select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true"></select>
                        <script>
                            $(document).ready(function() {
                                var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)')
                                    .kendoMultiSelect({
                                        autoClose: false,
                                        filter: "contains"
                                    }).data("kendoMultiSelect");

                                @if (Model.AvailableStores.Count == 0)
                                {
                                    <text>
                                        storesIdsInput.placeholder = "No stores available";
                                        storesIdsInput.enable = false;
                                    </text>
                                }
                            });
                        </script>
                    </div>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-xs-2 col-xs-offset-5">
                <button type="button" id="search-devices" class="btn btn-primary btn-search">
                    <i class="fa fa-search"></i> Search
                </button>
            </div>
        </div>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-body">
        <div id="grid"></div>
        <style>
            .hidden { display: none; }

            .custom-button {
                color: #444444;
                padding-right: 10px;
                font-size: 1.5em;
            }
        </style>
        <script>
            $(document).ready(function() {
                var grid = $("#grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("DeviceList", "Device"))",
                                type: "POST",
                                dataType: "json",
                                data: function() {
                                    var data = {
                                        SelectedStoreIds: $('#@Html.IdFor(model => model.SelectedStoreIds)').val(),
                                        SearchSerialNo: $('#@Html.IdFor(model => model.SearchSerialNo)').val()
                                    };
                                    addAntiForgeryToken(data);
                                    return data;
                                }
                            },
                            create: {
                                url: "@Html.Raw(Url.Action("AddDevice", "Device"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            update: {
                                url: "@Html.Raw(Url.Action("EditDevice", "Device"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            destroy: {
                                url: "@Html.Raw(Url.Action("DeleteDevice", "Device"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    Id: { editable: false, type: "number" },
                                    SerialNo: {
                                        editable: true,
                                        validation: {
                                            required: true,
                                            duplicate: function (input) {
                                                if (input.is("[name='SerialNo']") && input.val() != "") {
                                                    // get data
                                                    var sno = input.val();
                                                    var grid = $("#grid").data('kendoGrid');
                                                    var view = grid.dataSource.view();
                                                    var dataItem = grid.dataItem('tr.k-grid-edit-row');
                                                    var snoEdit = dataItem.SerialNo;
                                                    // validate
                                                    var valid = true;
                                                    for (var i = 0; i < view.length; i++) {
                                                        if ((sno == view[i].SerialNo) && (sno != snoEdit) && view[i].id) {
                                                            valid = false;
                                                            input.attr("data-duplicate-msg", "Duplicates not allowed.");
                                                            break;
                                                        }
                                                    }
                                                    return valid;
                                                }
                                                return true;
                                            }
                                        }
                                    },
                                    ModelNo: { editable: true, type: "string", validation: { required: true } },
                                    SelectedStoreId: { editable: true, validation: { required: true } },
                                    StoreName: { type: "string" }
                                }
                            }
                        },
                        requestEnd: function(e) {
                            if (e.type == "create" || e.type == "update") {
                                this.read();
                            }
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            this.cancelChanges();
                        },
                        pageSize: @(Model.PageSize),
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    sortable: {
                        mode: "single",
                        allowUnsort: false
                    },
                    filterable: true,
                    resizable: true,
                    columnMenu: { columns: false },
                    pageable: {
                        refresh: true,
                        pageSizes: [@(Model.AvailablePageSizes)],
                        @await Html.PartialAsync("_GridPagerMessages")
                    },
                    toolbar: [
                        {
                            name: "create",
                            text: "Add",
                            iconClass: "glyphicon btn-glyphicon glyphicon-plus img-circle text-danger"
                        }
                    ],
                    scrollable: false,
                    columns: [
                        {
                            field: "SerialNo",
                            title: "Serial No",
                            width: 230
                        },
                        {
                            field: "ModelNo",
                            title: "Model No",
                            width: 220
                        },
                        {
                            field: "SelectedStoreId",
                            title: "Store",
                            template: "#=StoreName#",
                            type: "string",
                            width: 300,
                            editor: storeDropDownEditor
                        }, {
                            template:
                                "<a href='\\#' title='Edit' class='custom-button edit-button'><i class='glyphicon glyphicon-pencil'></i></a>" +
                                "<a href='\\#' title='Update' class='custom-button update-button hidden'><i class='glyphicon glyphicon-ok-circle'></i></a>" +
                                "<a href='\\#' title='Cancel' class='custom-button cancel-button hidden'><i class='glyphicon glyphicon-remove-circle'></i></a>" +
                                "<a href='\\#' title='Delete' class='custom-button destroy-button'><i class='glyphicon glyphicon-trash'></i></a>",
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            width: 100
                        }
                    ],
                    editable: "inline",
                    edit: function(e) {
                        // Change buttons visibility when the Grid enters edit mode.
                        var editRow = e.container;
                        editRow.find(".custom-button").toggleClass("hidden");
                    }
                }).data("kendoGrid");

                $("#grid").on("click", ".custom-button", function(e) {
                        var btn = $(this);
                        e.preventDefault();

                        if (btn.hasClass("edit-button")) {
                            var row = btn.closest("tr");
                            grid.editRow(row);
                        } else if (btn.hasClass("cancel-button")) {
                            grid.cancelRow();
                        } else if (btn.hasClass("update-button")) {
                            grid.saveChanges();
                        } else if (btn.hasClass("destroy-button")) {
                            var row = btn.closest("tr");
                            grid.removeRow(row);
                        }
                    });
            });

            var dataSource = @Html.Raw(Json.Serialize(Model.AvailableStores));

            function storeDropDownEditor(container, options) {
                $('<input required data-text-field="Text" data-value-field="Value" data-bind="value:' +  options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        autoBind: false,
                        optionLabel: "--Select Store--",
                        dataSource: dataSource
                    });
            }
        </script>
        <script>

            $(document).ready(function() {
                //search button
                $('#search-devices').click(function() {
                    var grid = $('#grid').data('kendoGrid');
                    grid.dataSource.page(1);
                    return false;
                });
            });

        </script>
    </div>
</div>
</div>
</div>
</section>
</form>